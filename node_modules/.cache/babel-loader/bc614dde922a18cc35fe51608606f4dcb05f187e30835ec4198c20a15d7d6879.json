{"ast":null,"code":"var _jsxFileName = \"D:\\\\Curser Projects\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    // Check for stored user data on app load\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      const userData = JSON.parse(storedUser);\n      setUser(userData);\n      setIsAuthenticated(true);\n    }\n  }, []);\n  const login = async (email, password) => {\n    // Simulate login - in a real app, this would be an API call\n    const mockUser = {\n      id: '1',\n      email,\n      name: email.split('@')[0],\n      savedArticles: []\n    };\n    setUser(mockUser);\n    setIsAuthenticated(true);\n    localStorage.setItem('user', JSON.stringify(mockUser));\n  };\n  const register = async (email, password, name) => {\n    // Simulate registration - in a real app, this would be an API call\n    const mockUser = {\n      id: '1',\n      email,\n      name,\n      savedArticles: []\n    };\n    setUser(mockUser);\n    setIsAuthenticated(true);\n    localStorage.setItem('user', JSON.stringify(mockUser));\n  };\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('user');\n  };\n  const saveArticle = article => {\n    if (user) {\n      const updatedUser = {\n        ...user,\n        savedArticles: [...user.savedArticles, article]\n      };\n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n    }\n  };\n  const unsaveArticle = articleUrl => {\n    if (user) {\n      const updatedUser = {\n        ...user,\n        savedArticles: user.savedArticles.filter(article => article.url !== articleUrl)\n      };\n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n    }\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    saveArticle,\n    unsaveArticle,\n    isAuthenticated\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"Uq7KcTiOseX3k63CKoUNgtSkdNA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","storedUser","localStorage","getItem","userData","JSON","parse","login","email","password","mockUser","id","name","split","savedArticles","setItem","stringify","register","logout","removeItem","saveArticle","article","updatedUser","unsaveArticle","articleUrl","filter","url","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Curser Projects/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { AuthContextType, User, Article } from '../types';\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check for stored user data on app load\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      const userData = JSON.parse(storedUser);\r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n    }\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    // Simulate login - in a real app, this would be an API call\r\n    const mockUser: User = {\r\n      id: '1',\r\n      email,\r\n      name: email.split('@')[0],\r\n      savedArticles: [],\r\n    };\r\n\r\n    setUser(mockUser);\r\n    setIsAuthenticated(true);\r\n    localStorage.setItem('user', JSON.stringify(mockUser));\r\n  };\r\n\r\n  const register = async (email: string, password: string, name: string) => {\r\n    // Simulate registration - in a real app, this would be an API call\r\n    const mockUser: User = {\r\n      id: '1',\r\n      email,\r\n      name,\r\n      savedArticles: [],\r\n    };\r\n\r\n    setUser(mockUser);\r\n    setIsAuthenticated(true);\r\n    localStorage.setItem('user', JSON.stringify(mockUser));\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  const saveArticle = (article: Article) => {\r\n    if (user) {\r\n      const updatedUser = {\r\n        ...user,\r\n        savedArticles: [...user.savedArticles, article],\r\n      };\r\n      setUser(updatedUser);\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n    }\r\n  };\r\n\r\n  const unsaveArticle = (articleUrl: string) => {\r\n    if (user) {\r\n      const updatedUser = {\r\n        ...user,\r\n        savedArticles: user.savedArticles.filter(\r\n          (article) => article.url !== articleUrl\r\n        ),\r\n      };\r\n      setUser(updatedUser);\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n    }\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    login,\r\n    register,\r\n    logout,\r\n    saveArticle,\r\n    unsaveArticle,\r\n    isAuthenticated,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}