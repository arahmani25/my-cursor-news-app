{"ast":null,"code":"import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const LoadingSpinner=_ref=>{let{size='medium',color='#667eea'}=_ref;const sizeMap={small:'20px',medium:'40px',large:'60px'};return/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\",style:{width:sizeMap[size],height:sizeMap[size],borderColor:color,borderTopColor:'transparent'}})});};export default LoadingSpinner;","map":{"version":3,"names":["React","jsx","_jsx","LoadingSpinner","_ref","size","color","sizeMap","small","medium","large","className","children","style","width","height","borderColor","borderTopColor"],"sources":["D:/Curser Projects/src/components/LoadingSpinner.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface LoadingSpinnerProps {\r\n  size?: 'small' | 'medium' | 'large';\r\n  color?: string;\r\n}\r\n\r\nconst LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ \r\n  size = 'medium', \r\n  color = '#667eea' \r\n}) => {\r\n  const sizeMap = {\r\n    small: '20px',\r\n    medium: '40px',\r\n    large: '60px'\r\n  };\r\n\r\n  return (\r\n    <div className=\"loading-spinner-container\">\r\n      <div \r\n        className=\"loading-spinner\"\r\n        style={{\r\n          width: sizeMap[size],\r\n          height: sizeMap[size],\r\n          borderColor: color,\r\n          borderTopColor: 'transparent'\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAO1B,KAAM,CAAAC,cAA6C,CAAGC,IAAA,EAGhD,IAHiD,CACrDC,IAAI,CAAG,QAAQ,CACfC,KAAK,CAAG,SACV,CAAC,CAAAF,IAAA,CACC,KAAM,CAAAG,OAAO,CAAG,CACdC,KAAK,CAAE,MAAM,CACbC,MAAM,CAAE,MAAM,CACdC,KAAK,CAAE,MACT,CAAC,CAED,mBACER,IAAA,QAAKS,SAAS,CAAC,2BAA2B,CAAAC,QAAA,cACxCV,IAAA,QACES,SAAS,CAAC,iBAAiB,CAC3BE,KAAK,CAAE,CACLC,KAAK,CAAEP,OAAO,CAACF,IAAI,CAAC,CACpBU,MAAM,CAAER,OAAO,CAACF,IAAI,CAAC,CACrBW,WAAW,CAAEV,KAAK,CAClBW,cAAc,CAAE,aAClB,CAAE,CACH,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAd,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}