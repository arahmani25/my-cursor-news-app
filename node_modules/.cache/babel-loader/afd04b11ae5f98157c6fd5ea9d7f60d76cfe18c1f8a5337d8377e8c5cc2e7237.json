{"ast":null,"code":"import axios from 'axios';\nconst API_KEY = process.env.REACT_APP_NEWS_API_KEY || '223fe5e8f44845d5bb0250dd3f548979'; // Use environment variable or fallback\nconst BASE_URL = 'https://newsapi.org/v2';\nconst newsApi = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'X-Api-Key': API_KEY\n  }\n});\nexport const searchNews = async (query, page = 1, filters) => {\n  try {\n    const params = {\n      q: query,\n      page,\n      pageSize: (filters === null || filters === void 0 ? void 0 : filters.pageSize) || 20,\n      sortBy: (filters === null || filters === void 0 ? void 0 : filters.sortBy) || 'publishedAt',\n      language: (filters === null || filters === void 0 ? void 0 : filters.language) || 'en'\n    };\n\n    // Add date filters if provided\n    if (filters !== null && filters !== void 0 && filters.dateFrom) {\n      params.from = filters.dateFrom;\n    }\n    if (filters !== null && filters !== void 0 && filters.dateTo) {\n      params.to = filters.dateTo;\n    }\n    const response = await newsApi.get('/everything', {\n      params\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching news:', error);\n    throw new Error('Failed to fetch news articles');\n  }\n};\nexport const getTopHeadlines = async () => {\n  try {\n    const response = await newsApi.get('/top-headlines', {\n      params: {\n        country: 'us',\n        pageSize: 20\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching top headlines:', error);\n    throw new Error('Failed to fetch top headlines');\n  }\n};\nexport const formatDate = dateString => {\n  const date = new Date(dateString);\n  return date.toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n};\nexport const truncateText = (text, maxLength) => {\n  if (text.length <= maxLength) return text;\n  return text.substring(0, maxLength) + '...';\n};","map":{"version":3,"names":["axios","API_KEY","process","env","REACT_APP_NEWS_API_KEY","BASE_URL","newsApi","create","baseURL","headers","searchNews","query","page","filters","params","q","pageSize","sortBy","language","dateFrom","from","dateTo","to","response","get","data","error","console","Error","getTopHeadlines","country","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","truncateText","text","maxLength","length","substring"],"sources":["D:/Curser Projects/src/services/newsApi.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { NewsApiResponse, Article } from '../types';\r\nimport { SearchFilters } from '../types/search';\r\n\r\nconst API_KEY = process.env.REACT_APP_NEWS_API_KEY || '223fe5e8f44845d5bb0250dd3f548979'; // Use environment variable or fallback\r\nconst BASE_URL = 'https://newsapi.org/v2';\r\n\r\nconst newsApi = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    'X-Api-Key': API_KEY,\r\n  },\r\n});\r\n\r\nexport const searchNews = async (query: string, page: number = 1, filters?: SearchFilters): Promise<NewsApiResponse> => {\r\n  try {\r\n    const params: any = {\r\n      q: query,\r\n      page,\r\n      pageSize: filters?.pageSize || 20,\r\n      sortBy: filters?.sortBy || 'publishedAt',\r\n      language: filters?.language || 'en',\r\n    };\r\n\r\n    // Add date filters if provided\r\n    if (filters?.dateFrom) {\r\n      params.from = filters.dateFrom;\r\n    }\r\n    if (filters?.dateTo) {\r\n      params.to = filters.dateTo;\r\n    }\r\n\r\n    const response = await newsApi.get('/everything', { params });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching news:', error);\r\n    throw new Error('Failed to fetch news articles');\r\n  }\r\n};\r\n\r\nexport const getTopHeadlines = async (): Promise<NewsApiResponse> => {\r\n  try {\r\n    const response = await newsApi.get('/top-headlines', {\r\n      params: {\r\n        country: 'us',\r\n        pageSize: 20,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching top headlines:', error);\r\n    throw new Error('Failed to fetch top headlines');\r\n  }\r\n};\r\n\r\nexport const formatDate = (dateString: string): string => {\r\n  const date = new Date(dateString);\r\n  return date.toLocaleDateString('en-US', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n  });\r\n};\r\n\r\nexport const truncateText = (text: string, maxLength: number): string => {\r\n  if (text.length <= maxLength) return text;\r\n  return text.substring(0, maxLength) + '...';\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAIzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,kCAAkC,CAAC,CAAC;AAC1F,MAAMC,QAAQ,GAAG,wBAAwB;AAEzC,MAAMC,OAAO,GAAGN,KAAK,CAACO,MAAM,CAAC;EAC3BC,OAAO,EAAEH,QAAQ;EACjBI,OAAO,EAAE;IACP,WAAW,EAAER;EACf;AACF,CAAC,CAAC;AAEF,OAAO,MAAMS,UAAU,GAAG,MAAAA,CAAOC,KAAa,EAAEC,IAAY,GAAG,CAAC,EAAEC,OAAuB,KAA+B;EACtH,IAAI;IACF,MAAMC,MAAW,GAAG;MAClBC,CAAC,EAAEJ,KAAK;MACRC,IAAI;MACJI,QAAQ,EAAE,CAAAH,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEG,QAAQ,KAAI,EAAE;MACjCC,MAAM,EAAE,CAAAJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,MAAM,KAAI,aAAa;MACxCC,QAAQ,EAAE,CAAAL,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEK,QAAQ,KAAI;IACjC,CAAC;;IAED;IACA,IAAIL,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEM,QAAQ,EAAE;MACrBL,MAAM,CAACM,IAAI,GAAGP,OAAO,CAACM,QAAQ;IAChC;IACA,IAAIN,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAEQ,MAAM,EAAE;MACnBP,MAAM,CAACQ,EAAE,GAAGT,OAAO,CAACQ,MAAM;IAC5B;IAEA,MAAME,QAAQ,GAAG,MAAMjB,OAAO,CAACkB,GAAG,CAAC,aAAa,EAAE;MAAEV;IAAO,CAAC,CAAC;IAC7D,OAAOS,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAM,IAAIE,KAAK,CAAC,+BAA+B,CAAC;EAClD;AACF,CAAC;AAED,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAsC;EACnE,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMjB,OAAO,CAACkB,GAAG,CAAC,gBAAgB,EAAE;MACnDV,MAAM,EAAE;QACNgB,OAAO,EAAE,IAAI;QACbd,QAAQ,EAAE;MACZ;IACF,CAAC,CAAC;IACF,OAAOO,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAM,IAAIE,KAAK,CAAC,+BAA+B,CAAC;EAClD;AACF,CAAC;AAED,OAAO,MAAMG,UAAU,GAAIC,UAAkB,IAAa;EACxD,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;EACjC,OAAOC,IAAI,CAACE,kBAAkB,CAAC,OAAO,EAAE;IACtCC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,MAAM;IACbC,GAAG,EAAE;EACP,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGA,CAACC,IAAY,EAAEC,SAAiB,KAAa;EACvE,IAAID,IAAI,CAACE,MAAM,IAAID,SAAS,EAAE,OAAOD,IAAI;EACzC,OAAOA,IAAI,CAACG,SAAS,CAAC,CAAC,EAAEF,SAAS,CAAC,GAAG,KAAK;AAC7C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}