{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{loginUser,registerUser,resetPassword,checkEmailExists,updateUserProfile as updateProfile,changeUserPassword as changePasswordService}from'../services/authService';import{sendWelcomeEmail}from'../services/emailService';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);const[loading,setLoading]=useState(true);useEffect(()=>{// Check for stored user data on app load\nconst storedUser=localStorage.getItem('currentUser');if(storedUser){const userData=JSON.parse(storedUser);setUser(userData);setIsAuthenticated(true);}setLoading(false);},[]);const login=async(email,password)=>{try{const userData=await loginUser(email,password);setUser(userData);setIsAuthenticated(true);localStorage.setItem('currentUser',JSON.stringify(userData));}catch(error){throw error;}};const register=async(email,password,name)=>{try{const userData=await registerUser(email,password,name);setUser(userData);setIsAuthenticated(true);localStorage.setItem('currentUser',JSON.stringify(userData));// Send welcome email (non-blocking)\ntry{await sendWelcomeEmail(email,name);console.log('✅ Welcome email sent successfully');}catch(welcomeError){console.warn('⚠️ Welcome email failed, but registration was successful:',welcomeError);}}catch(error){throw error;}};const logout=()=>{setUser(null);setIsAuthenticated(false);localStorage.removeItem('currentUser');};const saveArticle=article=>{if(user){const updatedUser={...user,savedArticles:[...user.savedArticles,article]};setUser(updatedUser);localStorage.setItem('currentUser',JSON.stringify(updatedUser));}};const unsaveArticle=articleUrl=>{if(user){const updatedUser={...user,savedArticles:user.savedArticles.filter(article=>article.url!==articleUrl)};setUser(updatedUser);localStorage.setItem('currentUser',JSON.stringify(updatedUser));}};const forgotPassword=async email=>{try{const emailExists=await checkEmailExists(email);if(!emailExists){throw new Error('Email not found in our system');}// In a real app, this would send an email\nreturn true;}catch(error){throw error;}};const resetUserPassword=async(email,newPassword)=>{try{await resetPassword(email,newPassword);}catch(error){throw error;}};const updateUserProfile=async(name,email)=>{try{if(!user){throw new Error('User not logged in');}const updatedUser=await updateProfile(user.id,name,email);setUser(updatedUser);localStorage.setItem('currentUser',JSON.stringify(updatedUser));}catch(error){throw error;}};const changePassword=async(currentPassword,newPassword)=>{try{if(!user){throw new Error('User not logged in');}await changePasswordService(user.email,currentPassword,newPassword);}catch(error){throw error;}};const deactivateAccount=async reason=>{try{if(!user){throw new Error('User not logged in');}// Update user status to inactive\nconst updatedUser={...user,isActive:false};setUser(updatedUser);localStorage.setItem('currentUser',JSON.stringify(updatedUser));// In a real app, you would also save this to the backend\n// and log the deactivation reason\nconsole.log('Account deactivated:',{userId:user.id,reason});// Logout after a short delay\nsetTimeout(()=>{logout();},1000);}catch(error){throw error;}};const value={user,login,register,logout,saveArticle,unsaveArticle,isAuthenticated,forgotPassword,resetUserPassword,updateUserProfile,changePassword,deactivateAccount,loading};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","loginUser","registerUser","resetPassword","checkEmailExists","updateUserProfile","updateProfile","changeUserPassword","changePasswordService","sendWelcomeEmail","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","storedUser","localStorage","getItem","userData","JSON","parse","login","email","password","setItem","stringify","error","register","name","console","log","welcomeError","warn","logout","removeItem","saveArticle","article","updatedUser","savedArticles","unsaveArticle","articleUrl","filter","url","forgotPassword","emailExists","resetUserPassword","newPassword","id","changePassword","currentPassword","deactivateAccount","reason","isActive","userId","setTimeout","value","Provider"],"sources":["D:/Curser Projects/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { AuthContextType, User, Article } from '../types';\r\nimport { \r\n  loginUser, \r\n  registerUser, \r\n  resetPassword, \r\n  checkEmailExists,\r\n  getUserById,\r\n  updateUserProfile as updateProfile,\r\n  changeUserPassword as changePasswordService\r\n} from '../services/authService';\r\nimport { sendWelcomeEmail } from '../services/emailService';\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check for stored user data on app load\r\n    const storedUser = localStorage.getItem('currentUser');\r\n    if (storedUser) {\r\n      const userData = JSON.parse(storedUser);\r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      const userData = await loginUser(email, password);\r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n      localStorage.setItem('currentUser', JSON.stringify(userData));\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (email: string, password: string, name: string) => {\r\n    try {\r\n      const userData = await registerUser(email, password, name);\r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n      localStorage.setItem('currentUser', JSON.stringify(userData));\r\n      \r\n      // Send welcome email (non-blocking)\r\n      try {\r\n        await sendWelcomeEmail(email, name);\r\n        console.log('✅ Welcome email sent successfully');\r\n      } catch (welcomeError) {\r\n        console.warn('⚠️ Welcome email failed, but registration was successful:', welcomeError);\r\n      }\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('currentUser');\r\n  };\r\n\r\n  const saveArticle = (article: Article) => {\r\n    if (user) {\r\n      const updatedUser = {\r\n        ...user,\r\n        savedArticles: [...user.savedArticles, article],\r\n      };\r\n      setUser(updatedUser);\r\n      localStorage.setItem('currentUser', JSON.stringify(updatedUser));\r\n    }\r\n  };\r\n\r\n  const unsaveArticle = (articleUrl: string) => {\r\n    if (user) {\r\n      const updatedUser = {\r\n        ...user,\r\n        savedArticles: user.savedArticles.filter(\r\n          (article: Article) => article.url !== articleUrl\r\n        ),\r\n      };\r\n      setUser(updatedUser);\r\n      localStorage.setItem('currentUser', JSON.stringify(updatedUser));\r\n    }\r\n  };\r\n\r\n  const forgotPassword = async (email: string) => {\r\n    try {\r\n      const emailExists = await checkEmailExists(email);\r\n      if (!emailExists) {\r\n        throw new Error('Email not found in our system');\r\n      }\r\n      // In a real app, this would send an email\r\n      return true;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const resetUserPassword = async (email: string, newPassword: string) => {\r\n    try {\r\n      await resetPassword(email, newPassword);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const updateUserProfile = async (name: string, email: string) => {\r\n    try {\r\n      if (!user) {\r\n        throw new Error('User not logged in');\r\n      }\r\n\r\n      const updatedUser = await updateProfile(user.id, name, email);\r\n      setUser(updatedUser);\r\n      localStorage.setItem('currentUser', JSON.stringify(updatedUser));\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const changePassword = async (currentPassword: string, newPassword: string) => {\r\n    try {\r\n      if (!user) {\r\n        throw new Error('User not logged in');\r\n      }\r\n\r\n      await changePasswordService(user.email, currentPassword, newPassword);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const deactivateAccount = async (reason: string) => {\r\n    try {\r\n      if (!user) {\r\n        throw new Error('User not logged in');\r\n      }\r\n\r\n      // Update user status to inactive\r\n      const updatedUser = {\r\n        ...user,\r\n        isActive: false\r\n      };\r\n      \r\n      setUser(updatedUser);\r\n      localStorage.setItem('currentUser', JSON.stringify(updatedUser));\r\n      \r\n      // In a real app, you would also save this to the backend\r\n      // and log the deactivation reason\r\n      console.log('Account deactivated:', { userId: user.id, reason });\r\n      \r\n      // Logout after a short delay\r\n      setTimeout(() => {\r\n        logout();\r\n      }, 1000);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    login,\r\n    register,\r\n    logout,\r\n    saveArticle,\r\n    unsaveArticle,\r\n    isAuthenticated,\r\n    forgotPassword,\r\n    resetUserPassword,\r\n    updateUserProfile,\r\n    changePassword,\r\n    deactivateAccount,\r\n    loading\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}