{"ast":null,"code":"var _jsxFileName = \"D:\\\\Curser Projects\\\\src\\\\components\\\\ResetPassword.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useSearchParams } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { validatePassword } from '../services/authService';\nimport { validateResetToken, removeResetToken } from '../services/emailService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const {\n    resetUserPassword\n  } = useAuth();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [isValidToken, setIsValidToken] = useState(false);\n  const [isCheckingToken, setIsCheckingToken] = useState(true);\n  const [userEmail, setUserEmail] = useState('');\n  const token = searchParams.get('token');\n  const email = searchParams.get('email');\n  useEffect(() => {\n    // Validate the reset token\n    const validateToken = async () => {\n      try {\n        if (!token) {\n          setError('Invalid reset link - missing token');\n          setIsCheckingToken(false);\n          return;\n        }\n\n        // Validate the token using our email service\n        const emailFromToken = validateResetToken(token);\n        if (!emailFromToken) {\n          setError('Invalid or expired reset link');\n          setIsCheckingToken(false);\n          return;\n        }\n\n        // Check if the email in URL matches the token\n        if (email && emailFromToken !== email) {\n          setError('Invalid reset link - email mismatch');\n          setIsCheckingToken(false);\n          return;\n        }\n        setIsValidToken(true);\n        setUserEmail(emailFromToken);\n      } catch (err) {\n        setError('Failed to validate reset link');\n      } finally {\n        setIsCheckingToken(false);\n      }\n    };\n    validateToken();\n  }, [token, email]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    const passwordErrors = validatePassword(password);\n    if (passwordErrors.length > 0) {\n      setError(passwordErrors.join(', '));\n      return;\n    }\n    if (!userEmail) {\n      setError('Email is required');\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    try {\n      await resetUserPassword(userEmail, password);\n\n      // Remove the used token\n      if (token) {\n        removeResetToken(token);\n      }\n      setSuccess('Password has been reset successfully!');\n\n      // Redirect to login after 2 seconds\n      setTimeout(() => {\n        navigate('/login');\n      }, 2000);\n    } catch (err) {\n      setError(err.message || 'Failed to reset password. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  if (isCheckingToken) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Validating Reset Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please wait while we verify your reset link...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n  if (!isValidToken) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Invalid Reset Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"The password reset link is invalid or has expired.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Please request a new password reset link.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-actions\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/forgot-password\",\n              className: \"primary-button\",\n              children: \"Request New Reset Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              className: \"secondary-button\",\n              children: \"Back to Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n  if (success) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Password Reset Successful\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your password has been reset successfully!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"success-message\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"You will be redirected to the login page shortly.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-actions\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              className: \"primary-button\",\n              children: \"Go to Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Reset Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter your new password below.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"auth-form\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            placeholder: \"Enter your new password\",\n            className: \"form-input\",\n            disabled: isLoading,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password-requirements\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Password must contain:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                className: password.length >= 8 ? 'valid' : 'invalid',\n                children: \"At least 8 characters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: /[A-Z]/.test(password) ? 'valid' : 'invalid',\n                children: \"One uppercase letter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: /[a-z]/.test(password) ? 'valid' : 'invalid',\n                children: \"One lowercase letter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: /\\d/.test(password) ? 'valid' : 'invalid',\n                children: \"One number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: /[!@#$%^&*(),.?\":{}|<>]/.test(password) ? 'valid' : 'invalid',\n                children: \"One special character\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: \"Confirm New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"confirmPassword\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            placeholder: \"Confirm your new password\",\n            className: \"form-input\",\n            disabled: isLoading,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), confirmPassword && password !== confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: \"Passwords do not match\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isLoading || !password || !confirmPassword || password !== confirmPassword,\n            className: \"primary-button\",\n            children: isLoading ? 'Resetting...' : 'Reset Password'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"secondary-button\",\n            children: \"Back to Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"2ZPm+eqvGpa0FIXViC9Yq5Qr+m8=\", false, function () {\n  return [useSearchParams, useNavigate, useAuth];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useSearchParams","useAuth","validatePassword","validateResetToken","removeResetToken","jsxDEV","_jsxDEV","ResetPassword","_s","searchParams","navigate","resetUserPassword","password","setPassword","confirmPassword","setConfirmPassword","isLoading","setIsLoading","error","setError","success","setSuccess","isValidToken","setIsValidToken","isCheckingToken","setIsCheckingToken","userEmail","setUserEmail","token","get","email","validateToken","emailFromToken","err","handleSubmit","e","preventDefault","passwordErrors","length","join","setTimeout","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","disabled","required","test","_c","$RefreshReg$"],"sources":["D:/Curser Projects/src/components/ResetPassword.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { validatePassword } from '../services/authService';\r\nimport { validateResetToken, removeResetToken } from '../services/emailService';\r\n\r\nconst ResetPassword: React.FC = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n  const { resetUserPassword } = useAuth();\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [isValidToken, setIsValidToken] = useState(false);\r\n  const [isCheckingToken, setIsCheckingToken] = useState(true);\r\n  const [userEmail, setUserEmail] = useState('');\r\n\r\n  const token = searchParams.get('token');\r\n  const email = searchParams.get('email');\r\n\r\n  useEffect(() => {\r\n    // Validate the reset token\r\n    const validateToken = async () => {\r\n      try {\r\n        if (!token) {\r\n          setError('Invalid reset link - missing token');\r\n          setIsCheckingToken(false);\r\n          return;\r\n        }\r\n\r\n        // Validate the token using our email service\r\n        const emailFromToken = validateResetToken(token);\r\n        \r\n        if (!emailFromToken) {\r\n          setError('Invalid or expired reset link');\r\n          setIsCheckingToken(false);\r\n          return;\r\n        }\r\n\r\n        // Check if the email in URL matches the token\r\n        if (email && emailFromToken !== email) {\r\n          setError('Invalid reset link - email mismatch');\r\n          setIsCheckingToken(false);\r\n          return;\r\n        }\r\n\r\n        setIsValidToken(true);\r\n        setUserEmail(emailFromToken);\r\n      } catch (err) {\r\n        setError('Failed to validate reset link');\r\n      } finally {\r\n        setIsCheckingToken(false);\r\n      }\r\n    };\r\n\r\n    validateToken();\r\n  }, [token, email]);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (password !== confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    const passwordErrors = validatePassword(password);\r\n    if (passwordErrors.length > 0) {\r\n      setError(passwordErrors.join(', '));\r\n      return;\r\n    }\r\n\r\n    if (!userEmail) {\r\n      setError('Email is required');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      await resetUserPassword(userEmail, password);\r\n      \r\n      // Remove the used token\r\n      if (token) {\r\n        removeResetToken(token);\r\n      }\r\n      \r\n      setSuccess('Password has been reset successfully!');\r\n      \r\n      // Redirect to login after 2 seconds\r\n      setTimeout(() => {\r\n        navigate('/login');\r\n      }, 2000);\r\n    } catch (err: any) {\r\n      setError(err.message || 'Failed to reset password. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  if (isCheckingToken) {\r\n    return (\r\n      <div className=\"auth-container\">\r\n        <div className=\"auth-card\">\r\n          <div className=\"auth-header\">\r\n            <h2>Validating Reset Link</h2>\r\n            <p>Please wait while we verify your reset link...</p>\r\n          </div>\r\n          <div className=\"loading-spinner\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!isValidToken) {\r\n    return (\r\n      <div className=\"auth-container\">\r\n        <div className=\"auth-card\">\r\n          <div className=\"auth-header\">\r\n            <h2>Invalid Reset Link</h2>\r\n            <p>The password reset link is invalid or has expired.</p>\r\n          </div>\r\n          \r\n          <div className=\"auth-content\">\r\n            <div className=\"error-message\">\r\n              <p>Please request a new password reset link.</p>\r\n            </div>\r\n            \r\n            <div className=\"auth-actions\">\r\n              <Link to=\"/forgot-password\" className=\"primary-button\">\r\n                Request New Reset Link\r\n              </Link>\r\n              \r\n              <Link to=\"/login\" className=\"secondary-button\">\r\n                Back to Login\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (success) {\r\n    return (\r\n      <div className=\"auth-container\">\r\n        <div className=\"auth-card\">\r\n          <div className=\"auth-header\">\r\n            <h2>Password Reset Successful</h2>\r\n            <p>Your password has been reset successfully!</p>\r\n          </div>\r\n          \r\n          <div className=\"auth-content\">\r\n            <div className=\"success-message\">\r\n              <p>You will be redirected to the login page shortly.</p>\r\n            </div>\r\n            \r\n            <div className=\"auth-actions\">\r\n              <Link to=\"/login\" className=\"primary-button\">\r\n                Go to Login\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <div className=\"auth-header\">\r\n          <h2>Reset Your Password</h2>\r\n          <p>Enter your new password below.</p>\r\n        </div>\r\n        \r\n        <form onSubmit={handleSubmit} className=\"auth-form\">\r\n          {error && <div className=\"error-message\">{error}</div>}\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Enter your new password\"\r\n              className=\"form-input\"\r\n              disabled={isLoading}\r\n              required\r\n            />\r\n            <div className=\"password-requirements\">\r\n              <p>Password must contain:</p>\r\n              <ul>\r\n                <li className={password.length >= 8 ? 'valid' : 'invalid'}>\r\n                  At least 8 characters\r\n                </li>\r\n                <li className={/[A-Z]/.test(password) ? 'valid' : 'invalid'}>\r\n                  One uppercase letter\r\n                </li>\r\n                <li className={/[a-z]/.test(password) ? 'valid' : 'invalid'}>\r\n                  One lowercase letter\r\n                </li>\r\n                <li className={/\\d/.test(password) ? 'valid' : 'invalid'}>\r\n                  One number\r\n                </li>\r\n                <li className={/[!@#$%^&*(),.?\":{}|<>]/.test(password) ? 'valid' : 'invalid'}>\r\n                  One special character\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"confirmPassword\">Confirm New Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirmPassword\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              placeholder=\"Confirm your new password\"\r\n              className=\"form-input\"\r\n              disabled={isLoading}\r\n              required\r\n            />\r\n            {confirmPassword && password !== confirmPassword && (\r\n              <div className=\"error-message\">Passwords do not match</div>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"auth-actions\">\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading || !password || !confirmPassword || password !== confirmPassword}\r\n              className=\"primary-button\"\r\n            >\r\n              {isLoading ? 'Resetting...' : 'Reset Password'}\r\n            </button>\r\n            \r\n            <Link to=\"/login\" className=\"secondary-button\">\r\n              Back to Login\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}